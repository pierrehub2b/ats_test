package subscripts;

import org.testng.annotations.Test;
import org.openqa.selenium.Keys;

import com.ats.executor.ActionTestScript;
import com.ats.script.actions.*;

import com.ats.generator.objects.Cartesian;
import com.ats.generator.objects.mouse.Mouse;
import com.ats.tools.Operators;
import com.ats.generator.variables.Variable;

public class DemoClic extends ActionTestScript{

	//------------------------------------------------------------------------
	//     _  _____ ____     ____                           _             
	//    / \|_   _/ ___|   / ___| ___ _ __   ___ _ __ __ _| |_ ___  _ __ 
	//   / _ \ | | \___ \  | |  _ / _ \ '_ \ / _ \ '__/ _` | __/ _ \| '__|
	//  / ___ \| |  ___) | | |_| |  __/ | | |  __/ | | (_| | || (_) | |   
	// /_/   \_\_| |____/   \____|\___|_| |_|\___|_|  \__,_|\__\___/|_|   
	//
	//------------------------------------------------------------------------
	//	!! Warning !!
	//	Class automatically generated by ATS Script Generator (ver. 1.2.1)
	//	You may loose modifications if you edit this file manually !
	//------------------------------------------------------------------------

	/**
	* Test Name : <b>DemoClic</b>
	* Test Author : <b>AGILITEST-DUPER\Emmanuel DUPERRAY</b>
	* Test Description : <i></i>
	* Test Prerequisites : <i></i>
	* Generated at : <b>28 avr. 2018 Ã  09:57:59</b>
	*/

	@Test
	public void testMain(){

		//------------------------------------------------------------------------
		// Variables
		//------------------------------------------------------------------------


		//------------------------------------------------------------------------
		// Actions
		//------------------------------------------------------------------------

		exec(0,new ActionChannelStart(this, "Clic", cv(pm(0, "chrome")), null));
		exec(1,new ActionGotoUrl(this, true, cv("https://home-expenses.cxjs.io/dashboard")));
		exec(2,new ActionMouseKey(this, true, 0, el(0, "rect", pf(false, "x", cv("100")), pf(false, "y", cv("22.5"))), ms(Mouse.CLICK)));
		exec(3,new ActionMouseKey(this, true, 0, el(0, "rect", pf(false, "x", cv("100")), pf(false, "y", cv("47.5"))), ms(Mouse.CLICK)));
		exec(4,new ActionMouseKey(this, true, 0, el(0, "rect", pf(false, "x", cv("100")), pf(false, "y", cv("172.5"))), ms(Mouse.CLICK)));
		exec(5,new ActionMouseKey(this, true, 0, el(0, "DIV", pf(false, "class", cv("cxe-legend-entry")), pf(false, "text", cv("Technology"))), ms(Mouse.CLICK)));
		exec(6,new ActionMouseKey(this, true, 0, el(0, "DIV", pf(false, "class", cv("cxe-legend-entry")), pf(false, "text", cv("Travel"))), ms(Mouse.CLICK)));
		exec(7,new ActionMouseKey(this, true, 0, el(0, "DIV", pf(false, "class", cv("cxe-legend-entry")), pf(false, "text", cv("Education"))), ms(Mouse.CLICK)));
		exec(8,new ActionMouseKey(this, true, 0, el(0, "A", pf(false, "text", cv("Log"))), ms(Mouse.CLICK)));
		exec(9,new ActionMouseKey(this, true, 0, el(el(el(0, "DIV", pf(false, "class", cv("cxe-grid-fixed-header"))), 0, "TBODY", pf(false, "class", cv("cxe-grid-header"))), 0, "TH", pf(false, "class", cv("cxe-grid-col-header cxs-sortable")), pf(true, "text", cv("(?i)Date"))), ms(Mouse.CLICK)));
		exec(10,new ActionMouseKey(this, true, 0, el(el(el(0, "DIV", pf(false, "class", cv("cxe-grid-fixed-header"))), 0, "TBODY", pf(false, "class", cv("cxe-grid-header"))), 0, "TH", pf(false, "class", cv("cxe-grid-col-header cxs-sortable")), pf(true, "text", cv("(?i)Category"))), ms(Mouse.CLICK)));
		exec(11,new ActionMouseKey(this, true, 0, el(el(el(0, "DIV", pf(false, "class", cv("cxe-grid-fixed-header"))), 0, "TBODY", pf(false, "class", cv("cxe-grid-header"))), 0, "TH", pf(false, "class", cv("cxe-grid-col-header cxs-aligned-right cxs-sortable")), pf(true, "text", cv("(?i)Amount"))), ms(Mouse.CLICK)));
		exec(12,new ActionMouseKey(this, true, 0, el(el(el(0, "DIV", pf(false, "class", cv("cxe-grid-scroll-area cxs-fixed-header"))), 1, "TD", pf(false, "class", cv("cxs-pad cxs-aligned-center"))), 0, "A", pf(false, "class", cv("cxb-button cxm-hollow")), pf(true, "text", cv("(?i)EDIT"))), ms(Mouse.CLICK)));
		exec(13,new ActionMouseKey(this, true, 0, el(0, "I", pf(false, "class", cv("material-icons cxe-lookupfield-icon")), pf(false, "text", cv("keyboard_arrow_down"))), ms(Mouse.CLICK)));
		exec(14,new ActionMouseKey(this, true, 0, el(0, "LI", pf(true, "text", cv("(?i)Children"))), ms(Mouse.CLICK)));
		exec(15,new ActionMouseKey(this, true, 0, el(0, "BUTTON", pf(false, "class", cv("cxb-button cxm-primary")), pf(false, "type", cv("button"))), ms(Mouse.CLICK)));
		exec(16,new ActionMouseKey(this, true, 0, el(el(el(0, "DIV", pf(false, "class", cv("cxe-grid-scroll-area cxs-fixed-header"))), 1, "TD", pf(false, "class", cv("cxs-pad cxs-aligned-center"))), 0, "BUTTON", pf(false, "class", cv("cxb-button cxm-hollow")), pf(true, "text", cv("(?i)REMOVE")), pf(false, "type", cv("button"))), ms(Mouse.CLICK)));
		exec(17,new ActionMouseKey(this, true, 0, el(0, "BUTTON", pf(false, "class", cv("cxb-button cxm-flat-primary")), pf(true, "text", cv("(?i)YES")), pf(false, "type", cv("button"))), ms(Mouse.CLICK)));
		exec(18,new ActionMouseKey(this, true, 0, el(0, "A", pf(true, "text", cv("(?i)Dashboard"))), ms(Mouse.CLICK)));
		exec(19,new ActionMouseKey(this, true, 0, el(0, "I", pf(false, "class", cv("hamburger open"))), ms(Mouse.CLICK)));
		exec(20,new ActionMouseKey(this, true, 0, el(0, "I", pf(false, "class", cv("hamburger"))), ms(Mouse.CLICK)));
		exec(21,new ActionGotoUrl(this, true, cv("http://examples.sencha.com/extjs/6.5.1/examples/classic/desktop/index.html")));
		exec(23,new ActionMouseKey(this, true, 0, el(0, "DIV", pf(false, "class", cv("ux-desktop-shortcut-icon accordion-shortcut"))), ms(Mouse.CLICK)));
		exec(25,new ActionMouseKey(this, true, 0, el(el(0, "TD", pf(false, "role", cv("gridcell")), pf(false, "text", cv("Matt"))), 0, "SPAN", pf(false, "text", cv("Matt"))), ms(Mouse.CLICK)));
		exec(27,new ActionMouseKey(this, true, 0, el(el(0, "TD", pf(false, "role", cv("gridcell")), pf(false, "text", cv("Brian"))), 0, "SPAN", pf(false, "text", cv("Brian"))), ms(Mouse.CLICK)));
		exec(29,new ActionMouseKey(this, true, 0, el(el(0, "TD", pf(false, "role", cv("gridcell")), pf(false, "text", cv("Kevin"))), 0, "SPAN", pf(false, "text", cv("Kevin"))), ms(Mouse.CLICK)));
		exec(31,new ActionMouseKey(this, true, 0, el(el(0, "DIV", pf(false, "role", cv("tab")), pf(false, "text", cv("Settings"))), 0, "DIV", pf(false, "text", cv("Settings"))), ms(Mouse.CLICK)));
		exec(33,new ActionMouseKey(this, true, 0, el(el(0, "DIV", pf(false, "role", cv("tab")), pf(false, "text", cv("Even More Stuff"))), 0, "DIV", pf(false, "data-ref", cv("textEl"))), ms(Mouse.CLICK)));
		exec(35,new ActionMouseKey(this, true, 0, el(0, "DIV", pf(false, "id", cv("im-tree_header-title-textEl")), pf(false, "text", cv("Online Users"))), ms(Mouse.CLICK)));
		exec(37,new ActionMouseKey(this, true, 0, el(el(0, "DIV", pf(false, "data-componentid", cv("tool-1071"))), 0, "DIV", pf(false, "data-ref", cv("toolEl")), pf(false, "role", cv("presentation"))), ms(Mouse.CLICK)));
		exec(39,new ActionMouseKey(this, true, 0, el(el(el(0, "DIV", pf(false, "class", cv("x-box-target")), pf(false, "id", cv("acc-win_header-targetEl")), pf(false, "text", cv("Accordion Window"))), 0, "DIV", pf(false, "data-qtip", cv("Close dialog"))), 0, "DIV", pf(false, "data-ref", cv("toolEl"))), ms(Mouse.CLICK)));
		exec(40,new ActionChannelClose(this, "Clic"));
	}
}