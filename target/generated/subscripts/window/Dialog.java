package subscripts.window;

import org.testng.annotations.Test;
import org.openqa.selenium.Keys;

import com.ats.executor.ActionTestScript;
import com.ats.script.actions.*;

import com.ats.generator.objects.Cartesian;
import com.ats.generator.objects.mouse.Mouse;
import com.ats.tools.Operators;
import com.ats.generator.variables.Variable;

public class Dialog extends ActionTestScript{

	//------------------------------------------------------------------------
	//     _  _____ ____     ____                           _             
	//    / \|_   _/ ___|   / ___| ___ _ __   ___ _ __ __ _| |_ ___  _ __ 
	//   / _ \ | | \___ \  | |  _ / _ \ '_ \ / _ \ '__/ _` | __/ _ \| '__|
	//  / ___ \| |  ___) | | |_| |  __/ | | |  __/ | | (_| | || (_) | |   
	// /_/   \_\_| |____/   \____|\___|_| |_|\___|_|  \__,_|\__\___/|_|   
	//
	//------------------------------------------------------------------------
	//	!! Warning !!
	//	Class automatically generated by ATS Script Generator (ver. 1.2.1)
	//	You may loose modifications if you edit this file manually !
	//------------------------------------------------------------------------

	/**
	* Test Name : <b>Dialog</b>
	* Test Author : <b>pc_pierre\huber</b>
	* Test Description : <i></i>
	* Test Prerequisites : <i></i>
	* Generated at : <b>28 avr. 2018 Ã  09:57:59</b>
	*/

	@Test(groups={"default"})
	public void testMain(){

		//------------------------------------------------------------------------
		// Variables
		//------------------------------------------------------------------------

		Variable propertyVar = va("propertyVar");
		Variable inputName = va("inputName", cv("Pierre Huber"));

		//------------------------------------------------------------------------
		// Actions
		//------------------------------------------------------------------------

		exec(0,new ActionChannelStart(this, "alpha", cv(pm(0, "chrome")), null));
		exec(1,new ActionGotoUrl(this, true, cv("https://www.w3schools.com/html/tryit.asp?filename=tryhtml_iframe")));
		exec(2,new ActionAssertCount(this, true, 0, el(el(el(0, "IFRAME", pf(false, "id", cv("iframeResult"))), 0, "IFRAME", pf(false, "src", cv("demo_iframe.htm"))), 0, "H1", pf(true, "text", cv(".*"))), Operators.EQUAL, 1));
		exec(3,new ActionGotoUrl(this, true, cv("https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_alert")));
		exec(4,new ActionMouseKey(this, true, 0, el(el(0, "IFRAME", pf(false, "id", cv("iframeResult"))), 0, "BUTTON", pf(false, "text", cv("Try it"))), ms(Mouse.CLICK)));
		exec(5,new ActionProperty(this, true, 0, el(0, "dialog"), "text", propertyVar));
		exec(6,new ActionAssertProperty(this, true, 0, el(0, "dialog"), pf(true, "text", cv("(?i)hello.*"))));
		exec(7,new ActionAssertCount(this, true, 0, el(0, "dialog"), Operators.EQUAL, 1));
		exec(8,new ActionMouseKey(this, true, 0, el(0, "dialog", pf(false, "type", cv("accept"))), ms(Mouse.CLICK)));
		exec(9,new ActionGotoUrl(this, true, cv("https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_confirm")));
		exec(10,new ActionGotoUrl(this, true, cv("refresh")));
		exec(11,new ActionMouseKey(this, true, 9, el(el(0, "IFRAME", pf(false, "id", cv("iframeResult"))), 0, "BUTTON", pf(false, "text", cv("Try it"))), ms(Mouse.CLICK)));
		exec(12,new ActionMouseKey(this, true, 0, el(0, "dialog", pf(false, "type", cv("dismiss"))), ms(Mouse.CLICK)));
		exec(13,new ActionGotoUrl(this, true, cv("https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_prompt")));
		exec(14,new ActionMouseKey(this, true, 0, el(el(0, "IFRAME", pf(false, "id", cv("iframeResult"))), 0, "BUTTON", pf(false, "text", cv("Try it"))), ms(Mouse.CLICK)));
		exec(15,new ActionProperty(this, true, 0, el(0, "dialog"), "text", propertyVar));
		exec(16,new ActionText(this, true, 0, el(0, "dialog"), cv(inputName)));
		exec(17,new ActionMouseKey(this, true, 0, el(0, "dialog", pf(false, "type", cv("accept"))), ms(Mouse.CLICK)));
		exec(18,new ActionAssertProperty(this, true, -10, el(el(0, "IFRAME", pf(false, "id", cv("iframeResult"))), 0, "P", pf(false, "id", cv("demo"))), pf(true, "text", cv("Hello ", inputName, ".*"))));
		exec(19,new ActionChannelClose(this, "alpha"));
	}
}